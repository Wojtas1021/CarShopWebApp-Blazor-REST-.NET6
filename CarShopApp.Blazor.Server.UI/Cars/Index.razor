@page "/cars/"
@inject ICarService carService
@inject IJSRuntime js
<h3>Index</h3>

@if (response.Success == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}
else
{
    @if (Cars == null)
    {
        <div class="alert alert-info">
            <h4>Loading Data...</h4>
        </div>
    }
    else
    {
        <AuthorizeView Roles="Administrator">
            <a class="btn btn-dark" href="/cars/create"><span class="oi oi-plus" aria-hidden="true"></span>Create</a>
        </AuthorizeView>
        <br />
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Model</th>
                    <th>Price</th>
                    <th>Producer</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var car in Cars)
                {
                    <tr>
                        <td>
                            <img src="@car.Image" width="100" height="100" alt="@car.Name" />
                        </td>
                        <td>@car.Name</td>
                        <td>@car.Model</td>
                        <td>@car.Price.ToString("C")</td>
                        <td>@car.ProducerName</td>
                        <td>
                            <a class="btn btn-primary" href="/cars/details/@car.Id"><span class="oi oi-question-mark" aria-hidden="true"></span>Details</a>

                            <AuthorizeView Roles="Administrator">
                                <a class="btn btn-warning" href="/cars/edit/update/@car.Id"><span class="oi oi-pencil" aria-hidden="true"></span>Edit</a>
                                <button class="btn btn-danger" @onclick=@(() => Delete(@car.Id))><span class="oi oi-delete" aria-hidden="true"></span>Delete</button>
                            </AuthorizeView>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
@code {
    private List<CarReadOnlyDto> Cars;
    private Response<List<CarReadOnlyDto>> response = new() { Success = true };

    protected override async Task OnInitializedAsync()
    {
        response = await carService.GetCars();
        if (response.Success)
        {
            Cars = response.Data;
        }
    }
    private async Task Delete(int carId)
    {
        var car = Cars.First(i => i.Id == carId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Delete {car.Name}?");

        if (confirm)
        {
            await carService.DeleteCar(carId);
            if (response.Success)
            {
                await OnInitializedAsync();
            }
        }
    }
}
